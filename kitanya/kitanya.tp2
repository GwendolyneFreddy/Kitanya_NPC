// Version 6.2

BACKUP ~kitanya/backup~
AUTHOR ~rastor@rpgdungeon.net~

VERSION ~v6.4.1~

ALWAYS

	ACTION_IF NOT VARIABLE_IS_SET is_ee BEGIN // Always block must run only once per install!

		// Determines which game is installed and if the game is an Enhanced Edition.
		OUTER_SET is_ee = (GAME_IS ~bg2ee eet~) ? 1 : 0					// EE game
		OUTER_SET is_tob = (GAME_IS ~bgt tob tutu tutu_totsc~) ? 1 : 0	// based on vanilla ToB engine
		OUTER_SET is_soa = (GAME_IS ~soa~) ? 1 : 0						// based on vanilla Soa engine
		OUTER_SET is_bg2ee = (GAME_IS "bg2ee") ? 1 : 0					// b2gee
		OUTER_SET is_eet = (GAME_IS "eet") ? 1 : 0						// eet


 AT_INTERACTIVE_EXIT ~VIEW kitanya/readme-kitanya.html~

	END

END // of ALWAYS BLOCK

ALLOW_MISSING ~SOLAVAMP.DLG~

AUTO_TRA ~kitanya/lang/%s~

LANGUAGE ~American English~
		 ~english~
		 ~kitanya/lang/english/kitsetup.tra~

LANGUAGE ~Espanol (traduccion por Pattoko at ClanDLAN.net)~
		 ~spanish~
		 ~kitanya/lang/spanish/kitsetup.tra~
//		 ~kitanya/lang/english/kitsetup.tra~


/* ========================================== *
 *  Kitanya Conversation/Romance Mod for BG2  *
 * ========================================== */
BEGIN @0
DESIGNATED 0 LABEL ~kitanya_npc~

ACTION_IF FILE_EXISTS ~override/r#Kitanya.rpgd~
 THEN BEGIN
  FAIL @59
 END ELSE BEGIN
  PRINT @60
  COPY_EXISTING ~SW1H01.ITM~ ~override/r#Kitanya.rpgd~
 END

INCLUDE ~%MOD_FOLDER%/lib/main_component.tpa~


/* ========================= *
 *  Wizard Slayer Bug Fixes  *
 * ========================= */
BEGIN @1
DESIGNATED 01 LABEL ~kitanya_wizard_slayer_fix~

ACTION_IF FILE_EXISTS ~override/r#WizardslayerFixes.rpgd~
 THEN BEGIN
  FAIL @61
 END ELSE BEGIN
  COPY_EXISTING ~SW1H01.ITM~ ~override/r#WizardslayerFixes.rpgd~
 END

COPY_EXISTING ~SCRL03.ITM~ ~override~
	      ~SCRL04.ITM~ ~override~
	      ~SCRL05.ITM~ ~override~
	      ~SCRL06.ITM~ ~override~
	      ~SCRL07.ITM~ ~override~
	      ~SCRL08.ITM~ ~override~
	      ~SCRL09.ITM~ ~override~
	      ~SCRL10.ITM~ ~override~
	      ~SCRL11.ITM~ ~override~
	      ~SCRL12.ITM~ ~override~
	      ~SCRL13.ITM~ ~override~
	      ~SCRL14.ITM~ ~override~
	      ~SCRL15.ITM~ ~override~
	      ~SCRL16.ITM~ ~override~
	      ~SCRL17.ITM~ ~override~
	      ~SCRL18.ITM~ ~override~
 READ_BYTE 0x2f "usability"
 WRITE_BYTE 0x2f ("%usability%" BOR "0b00000010")
BUT_ONLY_IF_IT_CHANGES


/* ==================================== *
 *  Kitanya's Flaming Sword (from 1PP)  *
 * ==================================== */
BEGIN @2 // Code stolen from Nythrun and bastardized!
DESIGNATED 2 LABEL ~kitanya_flaming_sword~
REQUIRE_COMPONENT ~1pp_flamingswords/1pp_flamingswords.tp2~ ~0~ @66

ACTION_IF FILE_EXISTS ~override/r#KitanyaFlamingSword.rpgd~
 THEN BEGIN
  FAIL @61
 END ELSE BEGIN
  COPY_EXISTING ~SW1H01.ITM~ ~override/r#KitanyaFlamingSword.rpgd~
 END

COPY_EXISTING ~r!kitswd.itm~ ~override~
 SAY NAME2 @45
 WRITE_ASCII 0x22 ~FS~ #2
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN
   READ_LONG  0x64 "ho"
   READ_SHORT 0x68 "hc"
   READ_LONG  0x6a "eo"
   READ_SHORT 0x70 "ge"
   SET "blade" = 0x9fefff00
   SET "grip"  = 0x20a5da00
   SET "minor" = 0x3f00ff00
   SET "blade2" = 0xc
   SET "grip2"  = 0x73
   SET "minor2" = 0x73
   PATCH_IF ("blade" != 0x00) THEN BEGIN
    INSERT_BYTES ("eo" + (0x30 * "ge") + 0x00) 0x30
    WRITE_SHORT  ("eo" + (0x30 * "ge") + 0x00) 0x08
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x02) 0x01
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x04) "blade"
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x08) 0x10
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x0c) 0x02
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x12) 0x64
    SET "ge" += 0x01
   END
   PATCH_IF ("grip" != 0x00) THEN BEGIN
    INSERT_BYTES ("eo" + (0x30 * "ge") + 0x00) 0x30
    WRITE_SHORT  ("eo" + (0x30 * "ge") + 0x00) 0x08
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x02) 0x01
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x04) "grip"
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x08) 0x14
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x0c) 0x02
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x12) 0x64
    SET "ge" += 0x01
   END
   PATCH_IF ("minor" != 0x00) THEN BEGIN
    INSERT_BYTES ("eo" + (0x30 * "ge") + 0x00) 0x30
    WRITE_SHORT  ("eo" + (0x30 * "ge") + 0x00) 0x08
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x02) 0x01
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x04) "minor"
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x08) 0x15
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x0c) 0x02
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x12) 0x64
    SET "ge" += 0x01
   END
   PATCH_IF ("blade2" != 0x00) THEN BEGIN
    INSERT_BYTES ("eo" + (0x30 * "ge") + 0x00) 0x30
    WRITE_SHORT  ("eo" + (0x30 * "ge") + 0x00) 0x07
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x02) 0x01
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x04) "blade2"
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x08) 0x10
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x0c) 0x02
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x12) 0x64
    SET "ge" += 0x01
   END
   PATCH_IF ("grip2" != 0x00) THEN BEGIN
    INSERT_BYTES ("eo" + (0x30 * "ge") + 0x00) 0x30
    WRITE_SHORT  ("eo" + (0x30 * "ge") + 0x00) 0x07
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x02) 0x01
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x04) "grip2"
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x08) 0x14
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x0c) 0x02
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x12) 0x64
    SET "ge" += 0x01
   END
   PATCH_IF ("minor2" != 0x00) THEN BEGIN
    INSERT_BYTES ("eo" + (0x30 * "ge") + 0x00) 0x30
    WRITE_SHORT  ("eo" + (0x30 * "ge") + 0x00) 0x07
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x02) 0x01
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x04) "minor2"
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x08) 0x15
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x0c) 0x02
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x12) 0x64
    SET "ge" += 0x01
   END
   PATCH_IF (("blade" != 0x00) OR ("grip" != 0x00) OR ("minor" != 0x00)) THEN BEGIN
    WRITE_SHORT 0x70 "ge"
    FOR ("i1" = 0x00; "i1" < (0x38 * "hc"); "i1" += 0x38) BEGIN
     WRITE_SHORT ("ho" + "i1" + 0x20) "ge"
     READ_SHORT  ("ho" + "i1" + 0x1e) "ec"
     SET "ge" += "ec"
    END
   END
  END
 BUT_ONLY_IF_IT_CHANGES