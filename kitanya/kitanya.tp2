// Version 6.2

BACKUP ~kitanya/backup~
AUTHOR ~rastor@rpgdungeon.net~

VERSION ~v6.4.1~

ALWAYS
  ACTION_IF NOT FILE_EXISTS ~override/iplot01k.itm~
   THEN BEGIN
      COPY_EXISTING ~SW1H01.itm~ ~override/iplot01k.itm~
    END
  ACTION_IF NOT FILE_EXISTS ~override/iplot04g.itm~
   THEN BEGIN
      COPY_EXISTING ~SW1H01.itm~ ~override/iplot04g.itm~
    END
  ACTION_IF NOT FILE_EXISTS ~override/iplot04h.itm~
   THEN BEGIN
      COPY_EXISTING ~SW1H01.itm~ ~override/iplot04h.itm~
    END
  ACTION_IF NOT FILE_EXISTS ~override/iplot04i.itm~
   THEN BEGIN
      COPY_EXISTING ~SW1H01.itm~ ~override/iplot04i.itm~
    END
 END // ACTION_IF
 // KIT.IDS Patch (Thanks, CamDawg!)
 COPY_EXISTING_REGEXP GLOB ~^anomen[0-9]*\.cre~ ~override~
                           ~^imoen[0-9]*\.cre~  ~override~
                           ~^mazzy[0-9]*\.cre~  ~override~
  READ_LONG 0x244 "current_kit_value"
  PATCH_IF ("%current_kit_value%" = 0x00000000) BEGIN
    WRITE_LONG 0x244 0x40000000
  END
 BUT_ONLY_IF_IT_CHANGES

 COPY_EXISTING_REGEXP GLOB ~^haer[0-9]*\.cre~ ~override~
  READ_LONG 0x244 "current_kit_value"
  PATCH_IF ("%current_kit_value%" = 0x00000020) BEGIN
    WRITE_LONG 0x244 0x400d0000
  END
 BUT_ONLY_IF_IT_CHANGES

 COPY_EXISTING_REGEXP GLOB ~^korgan[0-9]*\.cre~ ~override~
  READ_LONG 0x244 "current_kit_value"
  PATCH_IF ("%current_kit_value%" = 0x00010000) BEGIN
    WRITE_LONG 0x244 0x40010000
  END
 BUT_ONLY_IF_IT_CHANGES

/* Thanks to CamDawg for providing this code */
 COPY_EXISTING ~kit.ids~ ~override~
  REPLACE_TEXTUALLY ~.*\bTRUECLASS\b~              ~0x4000 TRUECLASS~
  REPLACE_TEXTUALLY ~.*\bBERSERKER\b~              ~0x4001 BERSERKER~
  REPLACE_TEXTUALLY ~.*\bWIZARDSLAYER\b~           ~0x4002 WIZARDSLAYER~
  REPLACE_TEXTUALLY ~.*\bKENSAI\b~                 ~0x4003 KENSAI~
  REPLACE_TEXTUALLY ~.*\bCAVALIER\b~               ~0x4004 CAVALIER~
  REPLACE_TEXTUALLY ~.*\bINQUISITOR\b~             ~0x4005 INQUISITOR~
  REPLACE_TEXTUALLY ~.*\bUNDEADHUNTER\b~           ~0x4006 UNDEADHUNTER~
  REPLACE_TEXTUALLY ~.*\bMAGESCHOOL_ABJURER\b~     ~0x0040 MAGESCHOOL_ABJURER~
  REPLACE_TEXTUALLY ~.*\bMAGESCHOOL_CONJURER\b~    ~0x0080 MAGESCHOOL_CONJURER~
  REPLACE_TEXTUALLY ~.*\bMAGESCHOOL_DIVINER\b~     ~0x0100 MAGESCHOOL_DIVINER~
  REPLACE_TEXTUALLY ~.*\bMAGESCHOOL_ENCHANTER\b~   ~0x0200 MAGESCHOOL_ENCHANTER~
  REPLACE_TEXTUALLY ~.*\bMAGESCHOOL_ILLUSIONIST\b~ ~0x0400 MAGESCHOOL_ILLUSIONIST~
  REPLACE_TEXTUALLY ~.*\bMAGESCHOOL_INVOKER\b~     ~0x0800 MAGESCHOOL_INVOKER~
  REPLACE_TEXTUALLY ~.*\bMAGESCHOOL_NECROMANCER\b~ ~0x1000 MAGESCHOOL_NECROMANCER~
  REPLACE_TEXTUALLY ~.*\bMAGESCHOOL_TRANSMUTER\b~  ~0x2000 MAGESCHOOL_TRANSMUTER~
  REPLACE_TEXTUALLY ~.*\bMAGESCHOOL_GENERALIST\b~  ~0x0000 WILDMAGE~
  REPLACE_TEXTUALLY ~.*\bFERALAN\b~                ~0x4007 FERALAN~
  REPLACE_TEXTUALLY ~.*\bSTALKER\b~                ~0x4008 STALKER~
  REPLACE_TEXTUALLY ~.*\bBEASTMASTER\b~            ~0x4009 BEASTMASTER~
  REPLACE_TEXTUALLY ~.*\bASSASIN\b~                ~0x400A ASSASIN~
  REPLACE_TEXTUALLY ~.*\bBOUNTYHUNTER\b~           ~0x400B BOUNTYHUNTER~
  REPLACE_TEXTUALLY ~.*\bSWASHBUCKLER\b~           ~0x400C SWASHBUCKLER~
  REPLACE_TEXTUALLY ~.*\bBLADE\b~                  ~0x400D BLADE~
  REPLACE_TEXTUALLY ~.*\bJESTER\b~                 ~0x400E JESTER~
  REPLACE_TEXTUALLY ~.*\bSKALD\b~                  ~0x400F SKALD~
  REPLACE_TEXTUALLY ~.*\bGODTALOS\b~               ~0x4013 GODTALOS~
  REPLACE_TEXTUALLY ~.*\bGODHELM\b~                ~0x4014 GODHELM~
  REPLACE_TEXTUALLY ~.*\bGODLATHANDER\b~           ~0x4015 GODLATHANDER~
  REPLACE_TEXTUALLY ~.*\bTOTEMIC\b~                ~0x4010 TOTEMIC~
  REPLACE_TEXTUALLY ~.*\bSHAPESHIFTER\b~           ~0x4011 SHAPESHIFTER~
  REPLACE_TEXTUALLY ~.*\bBEASTFRIEND\b~            ~0x4012 BEASTFRIEND~
  REPLACE_TEXTUALLY ~.*\bBARBARIAN\b~              ~0x0000 BARBARIAN~
  REPLACE_TEXTUALLY ~.*\bWILDMAGE\b~               ~0x0000 WILDMAGE~
 BUT_ONLY_IF_IT_CHANGES

 APPEND ~kit.ids~ ~0x4000 TRUECLASS~
  UNLESS ~\bTRUECLASS\b~
 APPEND ~kit.ids~ ~0x0000 BARBARIAN~
  UNLESS ~\bBARBARIAN\b~
 APPEND ~kit.ids~ ~0x0000 WILDMAGE~
  UNLESS ~\bWILDMAGE\b~

 AT_INTERACTIVE_EXIT ~VIEW kitanya/readme-kitanya.html~

END // of ALWAYS BLOCK

ALLOW_MISSING ~SOLAVAMP.DLG~

AUTO_TRA ~kitanya/lang/%s~

LANGUAGE ~American English~
		 ~english~
		 ~kitanya/lang/english/kitsetup.tra~

LANGUAGE ~Espanol (traduccion por Pattoko at ClanDLAN.net)~
		 ~spanish~
		 ~kitanya/lang/spanish/kitsetup.tra~
//		 ~kitanya/lang/english/kitsetup.tra~


/* ========================================== *
 *  Kitanya Conversation/Romance Mod for BG2  *
 * ========================================== */
BEGIN @0
DESIGNATED 0 LABEL ~kitanya_npc~

ACTION_IF FILE_EXISTS ~override/r#Kitanya.rpgd~
 THEN BEGIN
  FAIL @59
 END ELSE BEGIN
  PRINT @60
  COPY_EXISTING ~SW1H01.ITM~ ~override/r#Kitanya.rpgd~
 END

INCLUDE ~%MOD_FOLDER%/lib/main_component.tpa~


/* ========================= *
 *  Wizard Slayer Bug Fixes  *
 * ========================= */
BEGIN @1
DESIGNATED 01 LABEL ~kitanya_wizard_slayer_fix~

ACTION_IF FILE_EXISTS ~override/r#WizardslayerFixes.rpgd~
 THEN BEGIN
  FAIL @61
 END ELSE BEGIN
  COPY_EXISTING ~SW1H01.ITM~ ~override/r#WizardslayerFixes.rpgd~
 END

COPY_EXISTING ~SCRL03.ITM~ ~override~
	      ~SCRL04.ITM~ ~override~
	      ~SCRL05.ITM~ ~override~
	      ~SCRL06.ITM~ ~override~
	      ~SCRL07.ITM~ ~override~
	      ~SCRL08.ITM~ ~override~
	      ~SCRL09.ITM~ ~override~
	      ~SCRL10.ITM~ ~override~
	      ~SCRL11.ITM~ ~override~
	      ~SCRL12.ITM~ ~override~
	      ~SCRL13.ITM~ ~override~
	      ~SCRL14.ITM~ ~override~
	      ~SCRL15.ITM~ ~override~
	      ~SCRL16.ITM~ ~override~
	      ~SCRL17.ITM~ ~override~
	      ~SCRL18.ITM~ ~override~
 READ_BYTE 0x2f "usability"
 WRITE_BYTE 0x2f ("%usability%" BOR "0b00000010")
BUT_ONLY_IF_IT_CHANGES


/* ==================================== *
 *  Kitanya's Flaming Sword (from 1PP)  *
 * ==================================== */
BEGIN @2 // Code stolen from Nythrun and bastardized!
DESIGNATED 2 LABEL ~kitanya_flaming_sword~
REQUIRE_COMPONENT ~1pp_flamingswords/1pp_flamingswords.tp2~ ~0~ @66

ACTION_IF FILE_EXISTS ~override/r#KitanyaFlamingSword.rpgd~
 THEN BEGIN
  FAIL @61
 END ELSE BEGIN
  COPY_EXISTING ~SW1H01.ITM~ ~override/r#KitanyaFlamingSword.rpgd~
 END

COPY_EXISTING ~r!kitswd.itm~ ~override~
 SAY NAME2 @45
 WRITE_ASCII 0x22 ~FS~ #2
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN
   READ_LONG  0x64 "ho"
   READ_SHORT 0x68 "hc"
   READ_LONG  0x6a "eo"
   READ_SHORT 0x70 "ge"
   SET "blade" = 0x9fefff00
   SET "grip"  = 0x20a5da00
   SET "minor" = 0x3f00ff00
   SET "blade2" = 0xc
   SET "grip2"  = 0x73
   SET "minor2" = 0x73
   PATCH_IF ("blade" != 0x00) THEN BEGIN
    INSERT_BYTES ("eo" + (0x30 * "ge") + 0x00) 0x30
    WRITE_SHORT  ("eo" + (0x30 * "ge") + 0x00) 0x08
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x02) 0x01
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x04) "blade"
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x08) 0x10
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x0c) 0x02
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x12) 0x64
    SET "ge" += 0x01
   END
   PATCH_IF ("grip" != 0x00) THEN BEGIN
    INSERT_BYTES ("eo" + (0x30 * "ge") + 0x00) 0x30
    WRITE_SHORT  ("eo" + (0x30 * "ge") + 0x00) 0x08
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x02) 0x01
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x04) "grip"
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x08) 0x14
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x0c) 0x02
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x12) 0x64
    SET "ge" += 0x01
   END
   PATCH_IF ("minor" != 0x00) THEN BEGIN
    INSERT_BYTES ("eo" + (0x30 * "ge") + 0x00) 0x30
    WRITE_SHORT  ("eo" + (0x30 * "ge") + 0x00) 0x08
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x02) 0x01
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x04) "minor"
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x08) 0x15
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x0c) 0x02
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x12) 0x64
    SET "ge" += 0x01
   END
   PATCH_IF ("blade2" != 0x00) THEN BEGIN
    INSERT_BYTES ("eo" + (0x30 * "ge") + 0x00) 0x30
    WRITE_SHORT  ("eo" + (0x30 * "ge") + 0x00) 0x07
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x02) 0x01
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x04) "blade2"
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x08) 0x10
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x0c) 0x02
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x12) 0x64
    SET "ge" += 0x01
   END
   PATCH_IF ("grip2" != 0x00) THEN BEGIN
    INSERT_BYTES ("eo" + (0x30 * "ge") + 0x00) 0x30
    WRITE_SHORT  ("eo" + (0x30 * "ge") + 0x00) 0x07
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x02) 0x01
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x04) "grip2"
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x08) 0x14
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x0c) 0x02
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x12) 0x64
    SET "ge" += 0x01
   END
   PATCH_IF ("minor2" != 0x00) THEN BEGIN
    INSERT_BYTES ("eo" + (0x30 * "ge") + 0x00) 0x30
    WRITE_SHORT  ("eo" + (0x30 * "ge") + 0x00) 0x07
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x02) 0x01
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x04) "minor2"
    WRITE_LONG   ("eo" + (0x30 * "ge") + 0x08) 0x15
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x0c) 0x02
    WRITE_BYTE   ("eo" + (0x30 * "ge") + 0x12) 0x64
    SET "ge" += 0x01
   END
   PATCH_IF (("blade" != 0x00) OR ("grip" != 0x00) OR ("minor" != 0x00)) THEN BEGIN
    WRITE_SHORT 0x70 "ge"
    FOR ("i1" = 0x00; "i1" < (0x38 * "hc"); "i1" += 0x38) BEGIN
     WRITE_SHORT ("ho" + "i1" + 0x20) "ge"
     READ_SHORT  ("ho" + "i1" + 0x1e) "ec"
     SET "ge" += "ec"
    END
   END
  END
 BUT_ONLY_IF_IT_CHANGES